apiVersion: flux.weave.works/v1beta1
kind: HelmRelease
metadata:
  name: notary-database-password-change
  namespace: notary-ns
  annotations:
    flux.weave.works/automated: "false"
spec:
  releaseName: notary-database-password-change
  chart:
    git: ssh://git@innersource.accenture.com/dlta/dlt-corda-gitops-all.git
    path: charts/h2-password-change
    ref: master
  values:
    replicaCount: 1


    #Provide the Name for node to be deployed
    #Eg. nodeName: notary
    nodeName: notary
    
    #Provide the replica set for node deployed
    #Eg. replicas: 1
    replicas: 1
    
    metadata:
      #Provide the namespace for organization's peer
      #Eg. namespace: default
      namespace: notary-ns
    
    image:
      #Provide the name of image for container
      #Eg. containerName: adopfrablockchain.azurecr.io/h2:2018
      containerName: adopfrablockchain.azurecr.io/h2:2018
      #Provide the name of image for init container
      #Eg. name: adopfrablockchain.azurecr.io/alpine-utils:1.0
      initContainerName: adopfrablockchain.azurecr.io/alpine-utils:1.0
      #Provide the image pull secret of image
      #Eg. pullSecret: regcred
      imagePullSecret: regcred

        
    
    #Provide the jdbc connection url
    #Eg. jdbcUrl: jdbc:h2:tcp://bank1db:9101/persistence
    jdbcUrl: jdbc:h2:tcp://notarydb:9104/persistence
    #Provide the url for health check
    #Eg. dbUrl: bank1db
    dbUrl: notarydb
    #Provide the port for health check
    #Eg. dbPort: 9101
    dbPort: 9104
    
    
    
    vault:
      #Provide the vault server address
      #Eg. address: http://34.228.219.208:8200
      address: http://52.90.141.182:8200
      #Provide the vaultrole
      #Eg. role: vault-role
      role: vault-role
      #Eg. authpath: cordanotary
      authpath: cordanotary
      #Eg. serviceaccountname: vault-auth-issuer
      serviceaccountname: vault-auth-notary
      #Provide the secretprefix
      #Eg. secretprefix: issuer
      dbsecretprefix: notary/credentials/database
      
    db:
      #Provide the interval in seconds you want to iterate till db to be ready 
      #Eg. readinesscheckinterval: 5
      readinesscheckinterval: 10
      #Provide the threshold till you want to check if specified db up and running
      #Eg. readinessthreshold: 2
      readinessthreshold: 15  